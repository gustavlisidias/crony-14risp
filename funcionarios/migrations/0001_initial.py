# Generated by Django 5.0.6 on 2024-07-01 20:09

import colorfield.fields
import django.db.models.deletion
import django_ckeditor_5.fields
import funcionarios.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cities_light', '0011_alter_city_country_alter_city_region_and_more'),
        ('configuracoes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(max_length=60, verbose_name='Cargo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
            },
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setor', models.CharField(max_length=60, verbose_name='Setor')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
            ],
            options={
                'verbose_name': 'Setor',
                'verbose_name_plural': 'Setores',
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=60, verbose_name='Título')),
                ('cor', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
                ('icone', models.CharField(default='<i class="fa-duotone fa-medal"></i>', max_length=60, verbose_name='Ícone')),
            ],
            options={
                'verbose_name': 'Time',
                'verbose_name_plural': 'Times',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=60, verbose_name='Tipo de Documento')),
                ('slug', models.SlugField(blank=True, default='', editable=False, max_length=120, null=True)),
                ('codigo', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='Código')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
            ],
            options={
                'verbose_name': 'Tipo Documento',
                'verbose_name_plural': 'Tipos Documento',
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(max_length=32, unique=True, verbose_name='Matrícula')),
                ('nome_completo', models.CharField(max_length=256, verbose_name='Nome Completo')),
                ('nome_social', models.CharField(blank=True, max_length=256, null=True, verbose_name='Nome Social')),
                ('nome_mae', models.CharField(blank=True, max_length=256, null=True, unique=True, verbose_name='Nome da Mãe')),
                ('nome_pai', models.CharField(blank=True, max_length=256, null=True, unique=True, verbose_name='Nome do Pai')),
                ('email', models.CharField(max_length=64, unique=True, verbose_name='Email')),
                ('email_sec', models.CharField(blank=True, max_length=64, null=True, verbose_name='Email Secundário')),
                ('contato', models.CharField(blank=True, max_length=16, null=True, verbose_name='Contato')),
                ('contato_sec', models.CharField(blank=True, max_length=16, null=True, verbose_name='Contato Secundário')),
                ('cpf', models.CharField(max_length=16, unique=True, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=16, null=True, unique=True, verbose_name='RG')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], default='M', max_length=1, verbose_name='Sexo')),
                ('estado_civil', models.CharField(blank=True, choices=[('S', 'Solteiro (a)'), ('C', 'Casado (a)'), ('D', 'Divorciado (a)'), ('V', 'Viúvo (a)')], max_length=1, null=True, verbose_name='Estado Civil')),
                ('endereco', models.CharField(blank=True, max_length=512, null=True, verbose_name='Endereço')),
                ('salario', models.FloatField(blank=True, null=True, verbose_name='Salário')),
                ('expedicao', models.DateField(blank=True, null=True, verbose_name='Data Expedição RG')),
                ('data_nascimento', models.DateField(verbose_name='Data Nascimento')),
                ('data_contratacao', models.DateField(verbose_name='Data Contratação')),
                ('data_demissao', models.DateField(blank=True, null=True, verbose_name='Data Encerramento')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('ip', models.CharField(blank=True, max_length=16, null=True, unique=True, verbose_name='Endereço IPV4')),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funcionarios.cargo', verbose_name='Cargo')),
                ('cidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cities_light.subregion', verbose_name='Cidade')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cities_light.region', verbose_name='Estado')),
                ('gerente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='funcionarios.funcionario', verbose_name='Responsável')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funcionarios.setor', verbose_name='Setor')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo', models.CharField(choices=[('PAR', 'Parar'), ('CTN', 'Continuar'), ('CMC', 'Começar'), ('PCC', 'Parar / Continuar / Começar'), ('SCI', 'Situação, Comportamento ou Impacto'), ('REU', 'Reunião'), ('CMD', 'Comunicado')], max_length=100)),
                ('mensagem', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Mensagem')),
                ('comprometimento', models.IntegerField(choices=[(1, 'Cumpriu Minimamente'), (2, 'Cumpriu Parcialmente'), (3, 'Cumriu Moderadamente'), (4, 'Cumpriu Suficientemente'), (5, 'Cumpriu Totalmente')], verbose_name='Comprometimento')),
                ('conhecimento', models.IntegerField(choices=[(1, 'Cumpriu Minimamente'), (2, 'Cumpriu Parcialmente'), (3, 'Cumriu Moderadamente'), (4, 'Cumpriu Suficientemente'), (5, 'Cumpriu Totalmente')], verbose_name='Conhecimento')),
                ('produtividade', models.IntegerField(choices=[(1, 'Cumpriu Minimamente'), (2, 'Cumpriu Parcialmente'), (3, 'Cumriu Moderadamente'), (4, 'Cumpriu Suficientemente'), (5, 'Cumpriu Totalmente')], verbose_name='Produtividade')),
                ('comportamento', models.IntegerField(choices=[(1, 'Cumpriu Minimamente'), (2, 'Cumpriu Parcialmente'), (3, 'Cumriu Moderadamente'), (4, 'Cumpriu Suficientemente'), (5, 'Cumpriu Totalmente')], verbose_name='Comportamento')),
                ('anonimo', models.BooleanField(default=False, verbose_name='Anônimo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('destinatario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_destinatario', to='funcionarios.funcionario', verbose_name='Destinatário')),
                ('remetente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_remetente', to='funcionarios.funcionario', verbose_name='Remetente')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
            },
        ),
        migrations.CreateModel(
            name='JornadaFuncionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('E', 'Entrada'), ('S', 'Saída')], max_length=1, verbose_name='Tipo')),
                ('dia', models.IntegerField(choices=[(1, 'Domingo'), (2, 'Segunda-feira'), (3, 'Terça-feira'), (4, 'Quarta-feira'), (5, 'Quinta-feira'), (6, 'Sexta-feira'), (7, 'Sábado')], verbose_name='Dia da Semana')),
                ('hora', models.TimeField(verbose_name='Hora')),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracoes.contrato', verbose_name='Contrato')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funcionarios.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'Jornada Funcionário',
                'verbose_name_plural': 'Jornada por Funcionário',
            },
        ),
        migrations.CreateModel(
            name='RespostaFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resposta', models.TextField(verbose_name='Resposta')),
                ('util', models.BooleanField(default=True, verbose_name='Útil')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funcionarios.feedback', verbose_name='Feedback')),
            ],
            options={
                'verbose_name': 'Resposta de Feedback',
                'verbose_name_plural': 'Respostas de Feedback',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontuacao', models.FloatField(default=1000, verbose_name='Pontuação')),
                ('status', models.BooleanField(default=True, verbose_name='Aberto')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funcionarios.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'Score Funcionário',
                'verbose_name_plural': 'Score por Funcionário',
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solicitacao', models.TextField(verbose_name='Solicitação')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitacao_feedback_destinatario', to='funcionarios.funcionario', verbose_name='Destinatário')),
                ('remetente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitacao_feedback_remetente', to='funcionarios.funcionario', verbose_name='Remetente')),
            ],
            options={
                'verbose_name': 'Solicitação de Feedback',
                'verbose_name_plural': 'Solicitações de Feedback',
            },
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to=funcionarios.models.Perfil.upload, verbose_name='Foto')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Biografia')),
                ('data_edicao', models.DateTimeField(auto_now=True, verbose_name='Data de Edição')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funcionarios.funcionario', verbose_name='Funcionário')),
                ('time', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='funcionarios.time', verbose_name='Time')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfis',
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.BinaryField(verbose_name='Documento')),
                ('caminho', models.CharField(max_length=256, verbose_name='Caminho do Documento')),
                ('data_documento', models.DateField(blank=True, null=True, verbose_name='Data do Documento')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('funcionario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='funcionarios.funcionario', verbose_name='Funcionário')),
                ('tipo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='funcionarios.tipodocumento', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
            },
        ),
    ]
